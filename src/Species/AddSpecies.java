package Species;
import java.awt.Color;
import javax.swing.JOptionPane;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
 * Class        AddSpecies.java
 * Description  A class used to both add and edit a species into the DB.
 * Course       CS 143
 * Hourse       1 hours and 12 minutes
 * Date         5/1/2021
  History Log   , 10/31/2022
 * @author	<i>Tyler Ingram</i>
 * @version 	%1% %2%
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class AddSpecies extends javax.swing.JDialog
{
    // class instance variables
    private Species mySpecies = null;
    private String name;
    private String diet;
    private int population;
    private String genus;
    private String habitat;
    private String predators;
    private final Color white = Color.WHITE;    // Default background color for input textfield
    private final Color pink = Color.PINK;      // Background color for bad input textfield
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor  AddSpecies()--default constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Add Species.
     * Date         10/31/2022
     * History Log  
     * @author      <i>Tyler Ingram</i>
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    public AddSpecies()
    {
        initComponents();
        // Center the form
        this.setLocationRelativeTo(null);        
        // Set the default button
        this.getRootPane().setDefaultButton(addJButton);   
        // Center the form
        addJButton.setText("Edit");
        // Set the modal to true
        setModal(true);        
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor  AddSpecies()--overloaded constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Edit species.
     * Date         10/31/2022
     * History Log  
     * @author      <i>Tyler Ingram</i>
     * @param       species Species
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public AddSpecies(Species species)
    {
        this();     //call default constructor to cuild GUI
        mySpecies = species;
        nameJTextField.setText(mySpecies.getName());
        dietJTextField.setText(mySpecies.getDiet());
        genusJTextField.setText(mySpecies.getGenus());
        habitatJTextField.setText(mySpecies.getHabitat());
        predatorsJTextField.setText(mySpecies.getPredators());
        popultaionJFormattedTextField.setText(String.valueOf(mySpecies.getPopulation()));
        titleJLabel.setText("Edit Species");
        this.setTitle("Edit Species");
        predatorsJTextField.setCaretPosition(0);
        dietJTextField.setCaretPosition(0);
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor  AddPerson()--overloaded constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Edit Person.
     * Date         10/31/2022
     * History Log  
     * @author      <i>Tyler Ingram</i>
     * @param       parent Frame
     * @param       modal  boolean
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public AddSpecies(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        predatorsJTextField.setCaretPosition(0);
        dietJTextField.setCaretPosition(0);
        // Center the form
        this.setLocationRelativeTo(null);        
        // Set the default button
        this.getRootPane().setDefaultButton(addJButton);                        
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method:      getSpecies()
     * Description: Returns the species added or edited.
     * Date:        5/12/16
     * @author      Tyler Ingram
     * @return      Person
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public Species getSpecies()
    {
        return mySpecies;
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        firstJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        lastJLabel = new javax.swing.JLabel();
        dietJTextField = new javax.swing.JTextField();
        ageJLabel = new javax.swing.JLabel();
        popultaionJFormattedTextField = new javax.swing.JFormattedTextField();
        addressJLabel = new javax.swing.JLabel();
        genusJTextField = new javax.swing.JTextField();
        cityJLabel = new javax.swing.JLabel();
        habitatJTextField = new javax.swing.JTextField();
        zipJLabel = new javax.swing.JLabel();
        predatorsJTextField = new javax.swing.JTextField();
        controlJPanel = new javax.swing.JPanel();
        addJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Species Add Form");
        setType(java.awt.Window.Type.UTILITY);

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 30)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(0, 102, 102));
        titleJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Tiger_small.jpg"))); // NOI18N
        titleJLabel.setText("Add Species");

        displayJPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        displayJPanel.setLayout(new java.awt.GridLayout(6, 2, 3, 3));

        firstJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        firstJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstJLabel.setText("Name");
        displayJPanel.add(firstJLabel);

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nameJTextField.setToolTipText("Must be between 2-200 characters");
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(nameJTextField);

        lastJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lastJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastJLabel.setText("Diet");
        displayJPanel.add(lastJLabel);

        dietJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dietJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        dietJTextField.setToolTipText("Must be between 2-200 characters");
        dietJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dietJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dietJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(dietJTextField);

        ageJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ageJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageJLabel.setText("Population");
        displayJPanel.add(ageJLabel);

        popultaionJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        popultaionJFormattedTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        popultaionJFormattedTextField.setToolTipText("Must be a postive integer");
        popultaionJFormattedTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        popultaionJFormattedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                popultaionJFormattedTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                popultaionJFormattedTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(popultaionJFormattedTextField);

        addressJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addressJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressJLabel.setText("Genus");
        displayJPanel.add(addressJLabel);

        genusJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genusJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        genusJTextField.setToolTipText("Must be between 2-200 characters");
        genusJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                genusJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                genusJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(genusJTextField);

        cityJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cityJLabel.setText("Habitat");
        displayJPanel.add(cityJLabel);

        habitatJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        habitatJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        habitatJTextField.setToolTipText("Must be between 2-200 characters");
        displayJPanel.add(habitatJTextField);

        zipJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zipJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zipJLabel.setText("Predators");
        displayJPanel.add(zipJLabel);

        predatorsJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        predatorsJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        predatorsJTextField.setToolTipText("Must be between 2-200 characters");
        predatorsJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                predatorsJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                predatorsJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(predatorsJTextField);

        controlJPanel.setLayout(new java.awt.GridLayout(1, 2, 3, 3));

        addJButton.setBackground(new java.awt.Color(255, 255, 204));
        addJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addJButton.setMnemonic('A');
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(addJButton);

        quitJButton.setBackground(new java.awt.Color(255, 255, 204));
        quitJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(quitJButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(titleJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(102, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       quitJButtonActionPerformed()
     * Description  Dispose the Add form. Uses the Validation class to
     *              validate input fields.
     * Date         10/31/2022
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Tyler Ingram</i>
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_quitJButtonActionPerformed
    {//GEN-HEADEREND:event_quitJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_quitJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       addJButtonActionPerformed()
     * Description  Add new Species.
     * Date         10/31/2022
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Tyler Ingram</i>
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addJButtonActionPerformed
    {//GEN-HEADEREND:event_addJButtonActionPerformed
        String message = "Error!";
        try
        {
            // Get the first name and check to see if it is valid
            name = nameJTextField.getText();
            if(!Validation.isLettersOnly(name))
            {
                message = "Please enter a valid name for the species.";
                nameJTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            // Get the last name and check to see if it is valid
            diet = dietJTextField.getText();
            if(!Validation.isValidName(diet,2,200))
            {
                message = "Please enter a valid diet for the species.";
                dietJTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            genus = genusJTextField.getText();
            // Get the age and check to see if it is valid
            if(!Validation.isValidName(genus,2,200))
            {
                message = "Please enter a genus for the species";
                genusJTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            habitat = habitatJTextField.getText();
            
            if(!Validation.isValidName(habitat,2,200))
            {
                message = "Please enter a valid habitat for the species.";
                habitatJTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            population = Integer.parseInt(popultaionJFormattedTextField.getText());
            if(!Validation.isInteger(popultaionJFormattedTextField.getText()))
            {
                message = "Please enter a valid population for the species.";
                popultaionJFormattedTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            predators = predatorsJTextField.getText();
            if(!Validation.isValidName(predators,2,200))
            {
                message = "Please enter a valid set of predators for the species.";
                predatorsJTextField.requestFocus();
                throw new IllegalArgumentException();
            }
            // create a new person and set the persons's information
            mySpecies = new Species(name, diet, genus, population, habitat,
                    predators);
            
            // Close the form
            this.dispose();
        }
        catch(IllegalArgumentException exp)
        {
            exp.printStackTrace();
            JOptionPane.showMessageDialog(null, message, "Invalid Input", 
                    JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception exp)
        {
            // Show unusual error message
            throw new RuntimeException("Error reading input.");
        }
    }//GEN-LAST:event_addJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       popultaionJFormattedTextFieldFocusGained()
     * Description  Highlight popultaionJFormattedTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void popultaionJFormattedTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_popultaionJFormattedTextFieldFocusGained
    {//GEN-HEADEREND:event_popultaionJFormattedTextFieldFocusGained
        popultaionJFormattedTextField.selectAll();
    }//GEN-LAST:event_popultaionJFormattedTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       popultaionJFormattedTextFieldFocusLost()
     * Description  Change color of popultaionJFormattedTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void popultaionJFormattedTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_popultaionJFormattedTextFieldFocusLost
    {//GEN-HEADEREND:event_popultaionJFormattedTextFieldFocusLost
        String input = popultaionJFormattedTextField.getText();
        if(Validation.isInteger(input))
            popultaionJFormattedTextField.setBackground(white);
        else
            popultaionJFormattedTextField.setBackground(pink);
    }//GEN-LAST:event_popultaionJFormattedTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       nameJTextFieldFocusGained()
     * Description  Highlight popultaionJFormattedTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_nameJTextFieldFocusGained
    {//GEN-HEADEREND:event_nameJTextFieldFocusGained
        nameJTextField.selectAll();
    }//GEN-LAST:event_nameJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       nameJTextFieldFocusLost()
     * Description  Change color of popultaionJFormattedTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_nameJTextFieldFocusLost
    {//GEN-HEADEREND:event_nameJTextFieldFocusLost
        String input = nameJTextField.getText();
        if(Validation.isValidName(input))
            nameJTextField.setBackground(white);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       dietJTextFieldFocusGained()
     * Description  Highlight dietJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void dietJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_dietJTextFieldFocusGained
    {//GEN-HEADEREND:event_dietJTextFieldFocusGained
        dietJTextField.selectAll();
    }//GEN-LAST:event_dietJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       dietJTextFieldFocusLost()
     * Description  Change color of dietJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void dietJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_dietJTextFieldFocusLost
    {//GEN-HEADEREND:event_dietJTextFieldFocusLost
        String input = dietJTextField.getText();
        if(Validation.isValidName(input,2,200))
            dietJTextField.setBackground(white);
        else
            dietJTextField.setBackground(pink);
    }//GEN-LAST:event_dietJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       genusJTextFieldFocusGained()
     * Description  Highlight genusJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void genusJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_genusJTextFieldFocusGained
    {//GEN-HEADEREND:event_genusJTextFieldFocusGained
        genusJTextField.selectAll();
    }//GEN-LAST:event_genusJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       genusJTextFieldFocusLost()
     * Description  Change color of genusJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void genusJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_genusJTextFieldFocusLost
    {//GEN-HEADEREND:event_genusJTextFieldFocusLost
        String input = genusJTextField.getText();
        if(Validation.isValidName(input, 5, 140))     //valid age: [5,140]
            genusJTextField.setBackground(white);
        else
            genusJTextField.setBackground(pink);
    }//GEN-LAST:event_genusJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       predatorsJTextFieldFocusGained()
     * Description  Highlight predatorsJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void predatorsJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_predatorsJTextFieldFocusGained
    {//GEN-HEADEREND:event_predatorsJTextFieldFocusGained
        predatorsJTextField.selectAll();
    }//GEN-LAST:event_predatorsJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       predatorsJTextFieldFocusLost()
     * Description  Change color of predatorsJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Tyler Ingram</i>
     * Date         10/31/2022
     * History log  
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void predatorsJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_predatorsJTextFieldFocusLost
    {//GEN-HEADEREND:event_predatorsJTextFieldFocusLost
        String input = predatorsJTextField.getText();
        if(Validation.isValidName(input,2,200))
            predatorsJTextField.setBackground(white);
        else
            predatorsJTextField.setBackground(pink);
    }//GEN-LAST:event_predatorsJTextFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JLabel ageJLabel;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JTextField dietJTextField;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JLabel firstJLabel;
    private javax.swing.JTextField genusJTextField;
    private javax.swing.JTextField habitatJTextField;
    private javax.swing.JLabel lastJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JFormattedTextField popultaionJFormattedTextField;
    private javax.swing.JTextField predatorsJTextField;
    private javax.swing.JButton quitJButton;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel zipJLabel;
    // End of variables declaration//GEN-END:variables
}
